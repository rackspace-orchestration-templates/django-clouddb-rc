heat_template_version: 2013-05-23

description: |
  Heat template to deploy a single Django server

parameters:

  database_host:
    description: Cloud Database hostname.
    type: string

  server_hostname:
    description: Server Name
    type: string
    default: django
    constraints:
    - length:
        min: 1
        max: 64
    - allowed_pattern: "^[a-zA-Z][a-zA-Z0-9-]*$"
      description: |
        Must begin with a letter and contain only alphanumeric characters.

  server_count:
    description: Number of servers to deploy
    type: number
    default: 1
    constraints:
    - range:
        min: 0
        max: 24
      description: Must be between 0 and 24 servers.

  image:
    description: Server Image
    type: string
    default: Ubuntu 12.04 LTS (Precise Pangolin) (PVHVM)
    constraints:
    - allowed_values:
      - Ubuntu 12.04 LTS (Precise Pangolin) (PVHVM)
      description: Must be a supported operating system.

  flavor:
    description: Rackspace Cloud Server flavor
    type: string
    default: 4 GB General Purpose v1
    constraints:
    - allowed_values:
      - 1 GB General Purpose v1
      - 2 GB General Purpose v1
      - 4 GB General Purpose v1
      - 8 GB General Purpose v1
      - 15 GB I/O v1
      - 30 GB I/O v1
      - 60 GB I/O v1
      - 90 GB Performance
      - 512MB Standard Instance
      - 1GB Standard Instance
      - 2GB Standard Instance
      - 4GB Standard Instance
      - 8GB Standard Instance
      - 15GB Standard Instance
      - 30GB Standard Instance
      description: |
        Must be a valid Rackspace Cloud Server flavor for the region you have
        selected to deploy into.

  db_user:
    description: "Username for the database."
    type: string
    default: db_user
    constraints:
    - allowed_pattern: "^(.){1,16}$"
      description: |
        Must be shorter than 16 characters, this is due to MySQL's maximum
        username length.

  db_pass:
    type: string
    hidden: true
    description: Database access password
    default: secret123

  ssh_keypair_name:
    description: Nova keypair name for ssh access to the server
    type: string

  virtualenv:
    label: virtualenv
    type: string
    default: venv
    description: |
      Python Virtual Environment in which Django will be installed.
      It will be created in the /srv directory.

  project_name:
    type: string
    description: The name to use to create your Django project.
    default: mysite
    constraints:
    - allowed_pattern: "^[A-Za-z0-9_]{1,31}$"
      description: |
          Must be alphanumeric and fewer than 32 chanracters.

  app_name:
    type: string
    description: The name of your app.
    default: myapp
    constraints:
    - allowed_pattern: "^[A-Za-z0-9_]{1,31}$"
      description: |
          Must be alphanumeric and fewer than 32 chanracters.

  django_admin_user:
    type: string
    description: Username for login to Django
    default: djangouser
    constraints:
    - allowed_pattern: "^(?=.*).{0,256}$"
      description: |
          Must be less than 256 chanracters.

  django_admin_email:
    type: string
    description: Email address
    default: admin@example.com
    constraints:
    - allowed_pattern: "^(?=.*).{0,512}$"
      description: |
          Must be less than 512 chanracters.

  django_admin_pass:
    type: string
    hidden: true
    description: Django admin password
    default: secret123

  venv_username:
    label: System User
    type: string
    default: pydev
    description: |
      Username with which to login to the Linux servers.  This user
      will be the owner of the Python Virtual Environment under which Django
      is installed.
    constraints:
    - allowed_pattern: "^(?!^root$)([a-z_][a-z0-9_]{0,30})$"
      description: alphanumeric, lowercase, and not root.

  private_key:
    description: Private SSH key
    type: string
    default: false

  kitchen:
    label: Kitchen
    description: |
      URL for the kitchen to use, fetched using git
    type: string
    default: https://github.com/rackspace-orchestration-templates/django-clouddb

  chef_version:
    label: Chef Version
    description: Version of chef client to use
    type: string
    default: 11.14.6

  parent_stack_id:
    label: Parent Stack ID
    type: string
    default: none

  rc_network_name:
    type: string
    label: RackConnect Network
    description: Name or UUID of RackConnected network to attach this server to
    constraints:
    - custom_constraint: rackconnect.network
    immutable: true
resources:
  django_server:
    type: "OS::Nova::Server"
    properties:
      name: { get_param: server_hostname }
      flavor: { get_param: flavor }
      image: { get_param: image }
      key_name: { get_param: ssh_keypair_name }
      networks:
      - network: { get_param: rc_network_name }
      - network: 11111111-1111-1111-1111-111111111111
      metadata:
        rax-heat: { get_param: parent_stack_id }

  django_server_public_ip:
    type: Rackspace::RackConnect::PublicIP
    depends_on:
    - django_server
    properties:
      server_id: { get_resource: django_server }

  django_setup:
    type: "OS::Heat::ChefSolo"
    depends_on: django_server
    properties:
      username: root
      private_key: { get_param: private_key }
      host: { get_attr: [django_server, networks, private, 0] }
      kitchen: { get_param: kitchen }
      chef_version: { get_param: chef_version }
      node:
        django:
          username: { get_param: venv_username }
          virtualenv: { get_param: virtualenv }
          project_name: { get_param: project_name }
          app_name: { get_param: app_name }
          database_name: app_data
          database_user:  { get_param: db_user }
          database_password: { get_param: db_pass }
          database_host: { get_param: database_host }
          django_admin_user: { get_param: django_admin_user }
          django_admin_email: { get_param: django_admin_email }
          django_admin_pass: { get_param: django_admin_pass }
        rax:
          firewall:
            tcp: [80]
        run_list: ["recipe[apt]",
                   "recipe[build-essential]",
                   "recipe[python-django]",
                   "recipe[rax-firewall]"]

outputs:

  privateIPv4:
    value: { get_attr: [django_server, networks, private, 0] }

  accessIPv4:
    value: { get_attr: [django_server, accessIPv4] }
